version: '3.8'

services:
  avito-shop-service:
      build: .
      container_name: avito-shop-service
      ports:
        - "127.0.0.1:8080:8080"
      env_file: ".env"
      environment:
        - DATABASE_HOST=db
        # порт сервиса
        - SERVER_PORT=8080
      depends_on:
        db:
            condition: service_healthy
      networks:
        - internal
  
  db:
    image: postgres:16
    container_name: postgres
    env_file: ".env"
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}'"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - internal
# integration_db:
#     image: postgres:16
#     container_name: postgres
#     env_file: ".env"
#     environment:
#       POSTGRES_USER: ${DATABASE_USER}
#       POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
#       POSTGRES_DB: ${DATABASE_NAME}
#     # volumes:
#       # "./migrations/init.sql" - путь к миграциям БД
#       # - ./internal/storage/migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
#     ports:
#       - "5433:5432"
#     healthcheck:
#       test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}'"]
#       interval: 5s
#       timeout: 10s
#       retries: 5
#       start_period: 10s
#     networks:
#       - internal
networks:
  internal: